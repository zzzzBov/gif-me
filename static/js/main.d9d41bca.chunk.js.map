{"version":3,"sources":["hooks/useGiphy.ts","hooks/useQueryString.ts","components/Footer.tsx","components/Results.tsx","components/SearchField.tsx","components/Search.tsx","index.tsx","components/GifMe.tsx","key.ts"],"names":["initialized","qs","querystring","parse","window","location","search","slice","Footer","react_default","a","createElement","className","Results","_ref","results","map","image","Object","assign","key","src","SearchField","label","name","onChange","value","autoFocus","_onChange","_x","apply","this","arguments","toString","e","currentTarget","type","Search","onSubmit","method","_onSubmit","preventDefault","SearchField_SearchField","aria-hidden","ReactDOM","render","_useQueryString","initialValue","_useState","useState","_useState2","slicedToArray","setValue","useEffect","newQS","stringify","objectSpread","defineProperty","history","replaceState","concat","useQueryString","_useQueryString2","_useGiphy","q","data","setData","searchGiphy","useCallback","asyncToGenerator","regenerator_default","mark","_callee","response","newData","wrap","_context","prev","next","api_key","limit","fetch","sent","ok","Error","json","console","log","alt","title","height","images","fixed_height","url","width","t0","stop","useGiphy","_useGiphy2","Search_Search","Results_Results","Footer_Footer","document","querySelector"],"mappings":"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","file":"static/js/main.d9d41bca.chunk.js","sourcesContent":["import querystring from 'querystring'\r\n\r\nimport { useCallback, useState } from 'react'\r\n\r\nimport { IImage } from '../interfaces'\r\nimport { API_KEY } from '../key'\r\n\r\nlet initialized = false\r\n\r\nexport const useGiphy = (q: string): [IImage[], () => void] => {\r\n  const [data, setData] = useState([])\r\n\r\n  const searchGiphy = useCallback(\r\n    async () => {\r\n      const qs = {\r\n        api_key: API_KEY,\r\n        limit: 30,\r\n        q\r\n      }\r\n\r\n      const search = querystring.stringify(qs)\r\n\r\n      try {\r\n        const response = await fetch(`http://api.giphy.com/v1/gifs/search?${search}`)\r\n\r\n        if (!response.ok) {\r\n          throw new Error('bad response')\r\n        }\r\n\r\n        const results = await response.json()\r\n\r\n        console.log(results)\r\n\r\n        const newData = results.data.map((image: any) => ({\r\n          alt: image.title,\r\n          height: image.images.fixed_height.height,\r\n          src: image.images.fixed_height.url,\r\n          width: image.images.fixed_height.width\r\n        }))\r\n\r\n        setData(newData)\r\n      } catch (e) {\r\n        setData([])\r\n      }\r\n    },\r\n    [q]\r\n  )\r\n\r\n  if (!initialized) {\r\n    searchGiphy()\r\n    initialized = true\r\n  }\r\n\r\n  return [\r\n    data,\r\n    searchGiphy\r\n  ]\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport querystring from 'querystring'\r\n\r\nconst qs = querystring.parse(window.location.search.slice(1))\r\n\r\nexport const useQueryString = (key: string): [string, React.Dispatch<React.SetStateAction<string>>] => {\r\n  let initialValue = qs[key] || ''\r\n  if (typeof initialValue !== 'string') {\r\n    initialValue = initialValue.slice(-1)[0]\r\n  }\r\n  \r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  useEffect(() => {\r\n    const newQS = querystring.stringify({\r\n      ...qs,\r\n      [key]: value\r\n    })\r\n\r\n    window.history.replaceState(null, '', `?${newQS}`)\r\n  }, [key, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer: React.FunctionComponent = () => (\r\n  <footer className='Footer'>\r\n    <p className='Footer_copyright'>Copyright &copy; zzzzBov</p>\r\n  </footer>\r\n)\r\n","import React from 'react'\r\n\r\nimport { IImage } from '../interfaces'\r\n\r\nexport interface IResultsProps {\r\n  results: IImage[]\r\n}\r\n\r\nexport const Results: React.FunctionComponent<IResultsProps> = ({\r\n  results\r\n}) => (\r\n  <main className='Results'>\r\n    {results.map((image) => (\r\n      <img className='Results_result' {...image} key={image.src} />\r\n    ))}\r\n  </main>\r\n)\r\n","import React from 'react'\r\n\r\nexport interface ISearchFieldProps {\r\n  label: string\r\n  name: string\r\n  onChange(value: string): void\r\n  value: string\r\n}\r\n\r\nexport const SearchField: React.FunctionComponent<ISearchFieldProps> = ({\r\n  label,\r\n  name,\r\n  onChange,\r\n  value\r\n}) => (\r\n  <label className='SearchField'>\r\n    <span className='SearchField_label'>{label}</span>\r\n    <input\r\n      autoFocus={true}\r\n      className='SearchField_input'\r\n      name={name}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n      type='search'\r\n      value={value} />\r\n  </label>\r\n)\r\n","import React from 'react'\r\n\r\nimport { SearchField } from './SearchField'\r\n\r\nexport interface ISearchProps {\r\n  onChange(value: string): void,\r\n  onSubmit(): void,\r\n  value: string\r\n}\r\n\r\nexport const Search: React.FunctionComponent<ISearchProps> = ({\r\n  onChange,\r\n  onSubmit,\r\n  value\r\n}) => (\r\n  <header className='Search'>\r\n    <form\r\n      className='Search_form'\r\n      method='GET'\r\n      onSubmit={(e) => {\r\n        e.preventDefault()\r\n        onSubmit()\r\n      }}>\r\n      <SearchField\r\n        label='Gif Me'\r\n        name='q'\r\n        onChange={onChange}\r\n        value={value} />\r\n      <button\r\n        className='Search_button'\r\n        type='submit'>\r\n        <i className='fa fa-search' aria-hidden='true'></i>\r\n        <span className='sr-only'>Search</span>\r\n      </button>\r\n    </form>\r\n  </header>\r\n)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport { GifMe } from './components'\n\nReactDOM.render(\n  <GifMe />,\n  document.querySelector('.Root')\n)\n","import React from 'react'\r\n\r\nimport { useGiphy, useQueryString } from '../hooks'\r\n\r\nimport { Footer } from './Footer'\r\nimport { Results } from './Results'\r\nimport { Search } from './Search'\r\n\r\nexport const GifMe: React.FunctionComponent = () => {\r\n  const [value, setValue] = useQueryString('q')\r\n\r\n  const [results, search] = useGiphy(value)\r\n\r\n  return (\r\n    <div className=\"GifMe\">\r\n      <Search\r\n        onChange={setValue}\r\n        onSubmit={search}\r\n        value={value}/>\r\n      <Results\r\n        results={results} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n","export const API_KEY = 'gIOlBEOuNaMXTmlVKnaIos6clb9St8U3'\r\n"],"sourceRoot":""}